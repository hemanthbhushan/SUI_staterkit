https://www.youtube.com/watch?v=LbAzTzlj3ac
https://medium.com/@coinex/coinex-move-based-public-chains-sui-vs-aptos-a0c1ebda44bc
https://medium.com/@BlockRunner/code-in-move-4-sui-move-basics-76c21cc0df1c
https://abhi3700.medium.com/i-have-been-using-sui-move-for-sometime-i-am-already-in-love-with-the-language-especially-looking-253899ad1473
https://noncegeek.medium.com/sui-programmable-transaction-block-ptbs-learning-move-0x03-6b1abef44dea
https://www.youtube.com/watch?v=X2ogC_uOdZ8&t=135s

https://blog.sui.io/linter-compile-warnings-update/
https://www.youtube.com/watch?v=jM5VBxoKPyM&t=1475s
////////imp
https://medium.com/a41-ventures/sui-series-3-by-sui-for-sui-of-sui-sui-move-575518b789e6

https://medium.com/@noncegeek/sui-programmable-transaction-block-ptbs-learning-move-0x03-6b1abef44dea

https://www.youtube.com/watch?v=lWg66640bYU

https://docs.sui.io/
https://docs.sui.io/references/cli
https://youtu.be/a94O-B7pNoM?si=TbZxBdNLZl55R-8T
https://www.youtube.com/watch?v=PTUr99vuAx0

https://github.com/sui-foundation/sui-move-intro-course?tab=readme-ov-file

https://github.com/scallop-io/sui-lending-protocol/tree/main

https://www.youtube.com/watch?v=W8dVZQy-dlI


https://medium.com/@noncegeek/sui-programmable-transaction-block-ptbs-learning-move-0x03-6b1abef44dea
https://suibase.io/cookbook/

//to create the new address
sui client new-address --help
Generate new address and keypair with keypair scheme flag {ed25519 | secp256k1 | secp256r1} with optional derivation path, default to m/44'/784'/0'/0'/0' for
ed25519 or m/54'/784'/0'/0/0 for secp256k1 or m/74'/784'/0'/0/0 for secp256r1. Word length can be { word12 | word15 | word18 | word21 | word24} default to word12
if not specified

Usage: sui client new-address [OPTIONS] <KEY_SCHEME> [ALIAS] [WORD_LENGTH] [DERIVATION_PATH]

sui client new-address ed25519
╭────────────────────────────────────────────────────────────────────────────────────────────╮
│ Created new keypair and saved it to keystore.                                              │
├────────────────┬───────────────────────────────────────────────────────────────────────────┤
│ alias          │ peaceful-epidote                                                          │
│ address        │ 0xebbdbec44d52a02a22ff18853dba7d90f781e94d7fafab3b7ac3dbc89b930f01        │
│ keyScheme      │ ed25519                                                                   │
│ recoveryPhrase │ dry like spray scare damp roof stage neither afford february young bubble │
╰────────────────┴───────────────────────────────────────────────────────────────────────────╯

///to know how address are created till now 
sui client addresses
╭──────────────────┬────────────────────────────────────────────────────────────────────┬────────────────╮
│ alias            │ address                                                            │ active address │
├──────────────────┼────────────────────────────────────────────────────────────────────┼────────────────┤
│ jovial-amethyst  │ 0x77b1ae05672c34320b5fc1a23edf966f7d9b9c5e799265aa7590836f001c852c │ *              │
│ objective-zircon │ 0xb8e1af8c6957c730cf00b2f5be5c417d4896df59345fa0e0ff1a4de449b15bf8 │                │
│ peaceful-epidote │ 0xebbdbec44d52a02a22ff18853dba7d90f781e94d7fafab3b7ac3dbc89b930f01 │                │
╰──────────────────┴────────────────────────────────────────────────────────────────────┴────────────────╯

* indicates the active address 

//to know the active address
sui client active-address
0x77b1ae05672c34320b5fc1a23edf966f7d9b9c5e799265aa7590836f001c852c


//to switch or change the active address
sui client switch --address 0xb8e1af8c6957c730cf00b2f5be5c417d4896df59345fa0e0ff1a4de449b15bf8

//in cli
Active address switched to 0xb8e1af8c6957c730cf00b2f5be5c417d4896df59345fa0e0ff1a4de449b15bf8


//to call the function that is published 

sui client call --package 0x0e93e988b734751bf57be0ed5fd419fed01eda4fc320637c3e89c65f82c85f78 --module music_coin --function mint_token --args 0x7622369a7f85565664aa0189cb03c4d4fdb484ad6c0f3a1915be9a7767d48108 23333333333 0x0b6ffe868b9b236cbf29316a277ff891e368facf8975e146c950b137f0268adc --gas-budget 10000000000


Usage: sui client call --package <PACKAGE> --module <MODULE> --function <FUNCTION> --args <ARGS> --gas-budget <GAS_BUDGET> 


//to publish the module

sui client publish --gas-budget 100000000 


//when dealing with the generic functions we need to pass that type using the --type-args like below , for normal functions with out generic can be called directly

 sui client call --package 0x101dae433e2b3090ce943f00041057532a433a70e88c193fac9e0f8ad8bd953d --module book_my_ticket_coin --function mint_and_transfer --type-args 0x101dae433e2b3090ce943f00041057532a433a70e88c193fac9e0f8ad8bd953d(packageId)::book_my_ticket_coin::BOOK_MY_TICKET_COIN --args 
0x82b735ee14cbba558c4d01f3b13734c22ed47070a75d24aac32689ff74e3029b 2333333333333333 0x0b6ffe868b9b236cbf29316a277ff891e368facf8975e146c950b137f0268adc --gas-budget 1000000000


//for getting testnet tokens  for gas 
curl --location --request POST 'https://faucet.devnet.sui.io/gas' \
--header 'Content-Type: application/json' \
--data-raw '{
    "FixedAmountRequest": {
        "recipient": "0x77b1ae05672c34320b5fc1a23edf966f7d9b9c5e799265aa7590836f001c852c"
    }
}'

//to know amount of gas (sui tokens)
sui client gas



//


//below are the cli command for the vector inputs

 public entry fun add_ticket_types(_: &OwnerCap, platform_info: &mut BmtPlatformDetails, ticket_type: vector<String>, ticket_price: vector<u64>, _: &mut TxContext) {

the command for the above inputs 
sui client call --package 0x157bef934e5bea375688fb40282d895b1747f994f35d7d939462cee73b8a5415 --module BookMyTicket --function add_ticket_types 
--args 0xdd70fb36f066239813eaaf45ea049d9945f9633a009eda840c0d205bebf9bc6b 0x601a2f8e690f811beae258bd4a3783372511eb8ab641b9bfef24f70d76de9f0d "["hemaeenth","fff","ccc"]" "[1,2,2]" --gas-budget 1000000000 --json
